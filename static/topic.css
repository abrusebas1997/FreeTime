body {

  color: white;
  font-family: 'Oswald', sans-serif;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.welcome{
  background-image: url("background.png");
  background-size: cover;
  height: 50vw;
}
#card-number {
  text-align: center;
  font-size: 36px;
  transform-style: preserve-3d;
  perspective: 750px;
}
#words{
  margin: 35% 0% 0% 0%;
  color: #f5f5f5;
}

#number {
  z-index: 1;
  display: inline-block;
  position: relative;
  top: 70px;
  left: px;
  text-align:center;
}

#circle {
  margin-top: 10%;
  background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);
  width: 300px;
  height: 300px;
  border-radius: 50%;
  display: inline-block;
  position: static;
  z-index: 0;

}

.run-animation {
    -webkit-animation: updown 2s infinite linear;
    -webkit-animation: flip 2s 1 linear;
    -webkit-transform-origin: 0px 0px -750px;
}

#circle:hover {
  background: #A1DEBB;
}

@-webkit-keyframes updown {
    0%   {transform: rotateX(0deg);}
    25%   {transform: rotateX(5deg);}
    50%   {transform: rotateX(0deg);}
    75%   {transform: rotateX(-5deg);}
    100% {transform: rotateX(0deg);}
}

@-webkit-keyframes flip {
    0%   {transform: rotateX(0deg);}
    100% {transform: rotateX(360deg);}
}

#helper-text {
  text-align: center;
  font-size: 40px;
  margin-top: 10%;
  color: #E067B2;
  position: relative;
  opacity: 1;
  -webkit-transition: opacity 6s;
  -moz-transition: opacity 6s;
  -ms-transition: opacity 6s;
  -o-transition: opacity 6s;
  transition: opacity 6s;
}

/*

All grid code is placed in a 'supports' rule (feature query) at the bottom of the CSS (Line 77).

The 'supports' rule will only run if your browser supports CSS grid.

Flexbox is used as a fallback so that browsers which don't support grid will still recieve an identical layout.

*/

@import url(https://fonts.googleapis.com/css?family=Montserrat:500);

:root {
	/* Base font size */
	font-size: 10px;
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

body {
	min-height: 100vh;
	background-color: #fafafa;
}

.container {
	max-width: 100rem;
	margin: 0 auto;
	padding: 14rem 0rem 2rem 2rem;
}

.heading {
	font-family: "Montserrat", Arial, sans-serif;
	font-size: 4rem;
	font-weight: 500;
	line-height: 1.5;
	text-align: center;
	padding: 3.5rem 0;
	color: #1a1a1a;
}

.heading span {
	display: block;
}

.gallery {
	display: flex;
	flex-wrap: wrap;
	/* Compensate for excess margin on outer gallery flex items */
	margin: -1rem -1rem;
}

.gallery-item {
  border-radius: 50px;
	/* Minimum width of 24rem and grow to fit available space */
	flex: 1 0 24rem;
	/* Margin value should be half of grid-gap value as margins on flex items don't collapse */
	margin: 1rem;
	box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
	overflow: hidden;
}

.gallery-image {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
	transition: transform 400ms ease-out;
}

.gallery-image:hover {
	transform: scale(1.15);
}

/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling.

*/

@supports (display: grid) {
	.gallery {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24rem, 1fr));
		grid-gap: 2rem;
	}

	.gallery,
	.gallery-item {
		margin: 0;
	}
}


#navbarTogglerDemo01 a{
  margin: 0px 0px 0px 20px;
}
